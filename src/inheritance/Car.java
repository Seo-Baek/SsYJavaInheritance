package inheritance;

/*
 * 상속(Inheritance) ?
 * 	- 객체지향 프로그램의 4대 특징 중 하나.
 * 	- 기존의 이미 잘 만들어진 클래스를 재사용하여
 * 	  새로운 클래스를 생성하는 자바 문법.
 * 	  즉, 특정 클래스를 만들 때 기존의 클래스의 데이터(속성)과
 * 	  기능(메소드)를 그대로 물려받아서 중복적인 코드를 줄여줌.
 * 	  (클래스의 재사용, 코드의 중복을 줄여줌)
 * 	- 자식과 부모의 관계로 형성.
 * 		=> 부모클래스 : Super, Parent 클래스라고 하기도 함.
 * 		=> 자식클래스 : Sub, Child 클래스라고 하기도 함.
 * 		=> 자식은 부모의 멤버보다 같거나 많다.
 * 	- 상속의 대상은 멤버(멤버변수, 멤버메소드)
 * 		=> 단, 생성자, private접근 제한을 갖는
 * 			멤버변수와 멤버메소드는 상속에서 제외됨.
 * 	- 상속 시 사용되는 키워드 : extends
 * 	- 상속은 단일상속만 가능함.
 * 	- 상속 시 장점은 클래스의 수정을 최소화시킬 수 있음.
 * 	  또한 유지보수 시간을 최소화시켜 준다는 장점이 있다.
 *		형식)
 *			[접근제한] class 자식클래스 extends 부모클래스{  }
 *
 *	주의) 부모클래스는 기존에 미리 정의되어 있어야 함.
 */

public class Car {
	
	int cc;			//베기량
	int door;		//문짝 수
	
	void prn() {
		System.out.println("배기량 : " + cc);
		System.out.println("문짝 수 : " + door);
	}
}
