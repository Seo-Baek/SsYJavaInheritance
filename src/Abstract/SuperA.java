package Abstract;

/*
 * 추상클래스(Abstract Class) ?
 * 	- 객체지향  프로그램 4대 특징 중 하나.
 * 	1. 추상메소드를 포함하는 클래스.
 * 	2. 추상메소드는 본체가 없는 메소드.
 * 		예) void prn();		// {   } 가 없다
 * 	3. 클래스와 메소드 앞에 abstract 키워드를 붙인다.
 * 	4. 추상메소드를 재정의하지 않으면 error 발생.
 * 		=> 추상메소드 재정의 강제성이 부여됨.
 * 	5. 추상클래스는 객체 생성이 불가능.
 * 		=> 자식클래스를 대상으로 객체 생성해야 함.
 *	- 추상클래스는 추상메소드를 가진 클래스를 말함.
 *	- 물론 일반 멤버변수, 멤버메소드를 가질 수 있음.
 *	- 그러나 한 개 이상의 추상메소드는 반드시 존재해야 한다.
 *		형식)
 *			[접근제한] abstract class 클래스명 {   }
 *	[추상메소드에서 error 발생 ==> 해결 (방법 2가지)]
 *		1. 자식클래스에서 추상메소드를 재정의(o)
 *		2. 자식클래스에서 재정의하지 않는 경우
 *			=> 자식클래스에 abstract 키워드를 붙인다.
 */

public abstract class SuperA {
	
	int num1;		//멤버변수
	
	int calc() {
		return num1 + 125;
	}
	
	abstract void prn();

}
